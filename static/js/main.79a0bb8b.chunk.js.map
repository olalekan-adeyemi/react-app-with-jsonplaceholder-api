{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","family","id","name","email","CardList","console","log","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredFamily","filter","toLowerCase","includes","handle","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,EAAO,SAACC,GACjB,OACA,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACtB,qBAAIJ,UAAWD,EAAMI,OAAOC,GAA5B,cAAmCL,EAAMI,OAAOE,QAChD,4BAAKN,EAAMI,OAAOG,YCFbC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAEZ,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SAECD,EAAMI,OAAOO,KAAK,SAAAP,GAAM,OACrB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,YCTjBO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAeA,EACfG,SAAYF,MCqDTG,G,wDArDb,aAAe,IAAD,8BACZ,gBAmBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBtC,EAAKC,MAAQ,CACXnB,OAAQ,GACRgB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAElBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ,EAAKT,SAAS,CAAEf,OAAQwB,S,oBAU5B,WAGE,MAAgCC,KAAKN,MAA7BnB,EAAR,EAAQA,OAAQgB,EAAhB,EAAgBA,YACVU,EAAiB1B,EAAO2B,QAAQ,SAAA3B,GAAM,OAC1CA,EAAOE,KAAK0B,cAAcC,SAASb,EAAYY,kBAGjD,OACE,qBAAK/B,UAAU,MAAf,SAEE,yBAAQA,UAAU,aAAlB,UAEE,cAAC,EAAD,CACEiC,OAAU,wBACVpB,aAAkBe,KAAKf,eAGzB,cAAC,EAAD,CAAUV,OAAU0B,a,GA5CZK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79a0bb8b.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.styles.css'\n\nexport const Card = (props) => {\n    return (\n    <div className='card'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.family.id}?set=set2&size=180x180`} />\n        <h3 className={props.family.id}> { props.family.name }</h3>\n        <p>{ props.family.email }</p>\n    </div>\n    )\n}","import React from 'react'\nimport './card-list.styles.css'\nimport { Card } from '../card/card.component'\n\n\n//Export the functional component\nexport const CardList = (props) => {\n    console.log(props)\n    return (\n    <div className='container'>\n        <div className='card-list'>\n        \n        {props.family.map( family => (\n            <Card key={family.id} family={family} />\n          ))}\n    </div>\n    </div>\n    )\n}","import React from \"react\";\nimport './search-box.styles.css'\n\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <input \n            className='search'\n            type='search' \n            placeholder = {placeholder } \n            onChange= { handleChange }  \n        />\n    )    \n}","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\n\n//Use classes instead of functions - to be able to access STATE\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      family: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    //Fetching data from an API with componentDidMount\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {\n      //console.log(users)\n      this.setState({ family: users})\n    })\n  }\n\n\n  //REFACTORING THE SEARCH VALUE INTO A FUNCTION\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value})\n  }\n\n  render() {\n\n    //Implement search on the members of the family - leave the main state unedited by destructuring the main state object\n    const { family, searchField } = this.state\n    const filteredFamily = family.filter( family => \n      family.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\"> \n        \n        <header className=\"App-header\">\n         \n          <SearchBox \n            handle = {'search family members'} \n            handleChange = {  this.handleChange } //e => this.setState({ searchField: e.target.value}) \n          />\n\n          <CardList family = {filteredFamily} />\n        </header>\n      </div>\n    );\n  }\n}\n\n/*function App() {\n  \n}*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}